from keras.datasets import imdb
from keras.preprocessing.sequence import pad_sequences
from keras.models import Sequential
from keras.layers import Embedding, SimpleRNN, Dense
from keras.callbacks import ModelCheckpoint, EarlyStopping

# 데이터 로드 및 전처리
(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=20000)
max_length = 100
X_train = pad_sequences(X_train, maxlen=max_length, padding='post', truncating='post')
X_test = pad_sequences(X_test, maxlen=max_length, padding='post', truncating='post')

# 모델 설계
model = Sequential([
    Embedding(input_dim=20000, output_dim=128, input_length=max_length),
    SimpleRNN(64, return_sequences=False),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# 모델 훈련
checkpoint = ModelCheckpoint('best-2rnn-model.h5', save_best_only=True)
early_stopping = EarlyStopping(patience=3, restore_best_weights=True)
model.fit(X_train, y_train, validation_split=0.2, epochs=10, batch_size=32,
          callbacks=[checkpoint, early_stopping])

# 테스트
model = load_model('best-2rnn-model.h5')
loss, accuracy = model.evaluate(X_test, y_test)
print(f"Test Loss: {loss}")
print(f"Test Accuracy: {accuracy}")
